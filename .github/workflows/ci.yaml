---
name: CI

on: [push]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }} # e.g. v1.0.0
      version: ${{ steps.release-please.outputs.version }} # e.g. 1.0.0
      all: ${{ toJSON(steps.release-please.outputs) }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          command: manifest

  goreleaser:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: needs.release-please.outputs.release_created
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: docker/build-push-action@v4
      with:
        push: false
        tags: ${{ github.repository }}:latest

    - uses: kitabisa/docker-slim-action@v1
      env:
        DSLIM_HTTP_PROBE: false
      with:
        target: ${{ github.repository }}:latest
        tag: "slim"

    # Push to the registry
    - run: docker image push "${{ github.repository }}" --all-tags